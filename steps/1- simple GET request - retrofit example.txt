

ANDROID RETROFIT EXAMPLE

1. Start Android Studio
2. New Android project
3. Name: AndroidRetrofit
4. API = 21
5. Language: Java
6. Empty Activity
7. Create
8. Open build.gradle(Module:AndroidRetrofit.app) / (Module: app)
9. Add the following dependencies:
//http dependencies
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'



dependencies {

    //material design
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'

    //http dependencies
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    //unit testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

10. Sync Now

11. Important URL to know:
https://jsonplaceholder.typicode.com/posts

12. Create new Java class at the root level of the project 'com.cosmic.androidretrofit' : Posts.java

public class Posts {

    private int userId;
    private int id;
    private String title;

    @SerializedName("body")
    private String text;

    public int getUserId() {
        return userId;
    }

    public void setUserId(int userId) {
        this.userId = userId;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getText() {
        return text;
    }

    public void setText(String text) {
        this.text = text;
    }
}


13. In activity_main.xml:

<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="8dp"
    tools:context=".MainActivity">

    <androidx.core.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:id="@+id/text_view_result"
            android:textColor="#000"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintLeft_toLeftOf="parent"
            app:layout_constraintRight_toRightOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

    </androidx.core.widget.NestedScrollView>

</androidx.constraintlayout.widget.ConstraintLayout>


14. Create a new file in the root folder JsonPlaceHolderApi as an interface:

package com.cosmic.androidretrofit;

public interface JsonPlaceHolderApi {
    
}


15. Modify the Api file:

package com.cosmic.androidretrofit;

import java.util.List;

import retrofit2.Call;

public interface JsonPlaceHolderApi {
    Call<List<Posts>> getPosts();
}


16. Modify further:

package com.cosmic.androidretrofit;

import java.util.List;

import retrofit2.Call;
import retrofit2.http.GET;

public interface JsonPlaceHolderApi {
    @GET("posts")
    Call<List<Posts>> getPosts();
}

Why @GET("posts") ?

Because of the url: https://jsonplaceholder.typicode.com/posts

We will attach a base url at some point. So what happens? Guessing here, but...we make an http call to a server that handles the incoming request. In Node it would be like 

app.get('/posts', function(req, res) -> {
	//parse the request
})

So we make a GET request to the base URL plus "posts" and the server will then know what to do with the incoming request based on the parsed url and deliver the response.



17. In MainActivity.class:


package com.cosmic.androidretrofit;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.widget.TextView;
import java.util.List;
import retrofit2.Call;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;

public class MainActivity extends AppCompatActivity {

    private TextView textViewResult;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        textViewResult = findViewById(R.id.text_view_result);

        Retrofit retrofit = new Retrofit.Builder()
                .baseUrl("https://jsonplaceholder.typicode.com")
                .addConverterFactory(GsonConverterFactory.create())
                .build();
        JsonPlaceHolderApi jsonPlaceHolderApi = retrofit.create(JsonPlaceHolderApi.class);
        Call<List<Posts>> call = jsonPlaceHolderApi.getPosts();
    }
}


18. Continue modifying MainActivity.class:

call.enqueue(new Callback<List<Posts>>() {
            @Override
            public void onResponse(Call<List<Posts>> call, Response<List<Posts>> response) {
                if (!response.isSuccessful()){
                    textViewResult.setText("Code Response: " + response.code());
                    return;
                }
                List<Posts> posts = response.body();
                for (Posts post : posts){
                    String content = "";
                    content += "ID: " + post.getId() + "\n";
                    content += "User ID: " + post.getUserId() + "\n";
                    content += "Title: " + post.getTitle() + "\n";
                    content += "Text: " + post.getText() + "\n\n";
                    textViewResult.append(content);
                }
            }

            @Override
            public void onFailure(Call<List<Posts>> call, Throwable t) {
                String message = "There was an error message";
                String err = t.getMessage();
                Toast.makeText(MainActivity.this, message + " " + err, Toast.LENGTH_SHORT).show();
                textViewResult.setText(t.getMessage());
            }
        });



19. The entire MainActivity.class file :


package com.cosmic.androidretrofit;

import androidx.appcompat.app.AppCompatActivity;
import android.annotation.SuppressLint;
import android.os.Bundle;
import android.widget.TextView;
import android.widget.Toast;
import java.util.List;
import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;
import retrofit2.Retrofit;
import retrofit2.converter.gson.GsonConverterFactory;

@SuppressLint("SetTextI18n")
public class MainActivity extends AppCompatActivity {

    private TextView textViewResult;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        textViewResult = findViewById(R.id.text_view_result);

        Retrofit retrofit = new Retrofit.Builder()
                .baseUrl("https://jsonplaceholder.typicode.com")
                .addConverterFactory(GsonConverterFactory.create())
                .build();
        JsonPlaceHolderApi jsonPlaceHolderApi = retrofit.create(JsonPlaceHolderApi.class);
        Call<List<Posts>> call = jsonPlaceHolderApi.getPosts();
        call.enqueue(new Callback<List<Posts>>() {
            @Override
            public void onResponse(Call<List<Posts>> call, Response<List<Posts>> response) {
                if (!response.isSuccessful()){
                    textViewResult.setText("Code Response: " + response.code());
                    return;
                }
                List<Posts> posts = response.body();
                for (Posts post : posts){
                    String content = "";
                    content += "ID: " + post.getId() + "\n";
                    content += "User ID: " + post.getUserId() + "\n";
                    content += "Title: " + post.getTitle() + "\n";
                    content += "Text: " + post.getText() + "\n\n";
                    textViewResult.append(content);
                }
            }

            @Override
            public void onFailure(Call<List<Posts>> call, Throwable t) {
                String message = "There was an error message";
                String err = t.getMessage();
                Toast.makeText(MainActivity.this, message + " " + err, Toast.LENGTH_SHORT).show();
                textViewResult.setText(t.getMessage());
            }
        });
    }
}




20. Run program

21. Got an error:

2021-10-17 18:56:07.232 17693-7459/com.cosmic.androidretrofit E/AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher
    Process: com.cosmic.androidretrofit, PID: 17693
    java.lang.SecurityException: Permission denied (missing INTERNET permission?)
        at java.net.Inet6AddressImpl.lookupHostByName(Inet6AddressImpl.java:150)
        at java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:103)
        at java.net.InetAddress.getAllByName(InetAddress.java:1152)
        at okhttp3.Dns$1.lookup(Dns.java:40)



22. Open AndroidManifest.xml file:
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.cosmic.androidretrofit">
    
    <uses-permission android:name="android.permission.INTERNET" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.AndroidRetrofit">
        <activity android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>



23. Run the program


24. Add logt         private static final String TAG = "MainActivity"; to MainActivity.java

25. Log the response:
if (!response.isSuccessful()){
                    textViewResult.setText("Code Response: " + response.code());
                    return;
                }
                Log.d(TAG, "onResponse: " + response);
                List<Posts> posts = response.body();
                for (Posts post : posts){


26. Response:

D/MainActivity: onResponse: Response{protocol=h2, code=200, message=, url=https://jsonplaceholder.typicode.com/posts}



27. Logging each item in the response:

                Log.d(TAG, "onResponse: " + response);
                for (int i = 0; i < response.body().size(); i ++){
                    Log.d(TAG, "onResponse: individual list items : " + response.body().get(i).getTitle());
                }






































































